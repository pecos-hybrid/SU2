# Continous Integration setup for SU2.
# Tests on the develop branch in both serial and parallel.

dist: xenial
sudo: required

language: python

compiler:
    - gcc

notifications:
    email:
        recipients:
            - clarkp@utexas.edu

branches:
    only:
        - pecos-dev
        - fix-travis-conda

python:
    - 3.6

matrix:
  include:
    - env:
        # Serial build and test
        - CONFIGURE_COMMAND="./preconfigure.py --prefix=$TRAVIS_BUILD_DIR --enable-PY_WRAPPER --disable-tecio"
          TEST_SCRIPT=serial_regression.py
      addons:
          apt:
              packages:
                - build-essential
                - swig
                - libopenmpi-dev
      before_script:
          - git clone -b v6.0.1 https://github.com/su2code/TestCases.git ./TestData
          - cp -R ./TestData/* ./TestCases/
          - cd TestCases
      script:
          - echo `which python`
          - echo `pip --version`
          - travis_wait 90 && python $TEST_SCRIPT
    - env:
        # Parallel build and test
        - CONFIGURE_COMMAND="./preconfigure.py --enable-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=$TRAVIS_BUILD_DIR --enable-PY_WRAPPER --disable-tecio"
          TEST_SCRIPT=parallel_regression.py
      addons:
          apt:
              packages:
                - build-essential
                - swig
                - libopenmpi-dev
      before_script:
          - git clone -b v6.0.1 https://github.com/su2code/TestCases.git ./TestData
          - cp -R ./TestData/* ./TestCases/
          - cd TestCases
      script:
          - echo `which python`
          - echo `pip --version`
          - travis_wait 90 && python $TEST_SCRIPT
    - env:
        # Serial build and unit-test
        - CONFIGURE_COMMAND="./preconfigure.py --prefix=$TRAVIS_BUILD_DIR --with-Boost-include=/usr/include/ --disable-tecio"
      addons:
          apt:
              packages:
                - build-essential
                - swig
                - libopenmpi-dev
                - libboost-test-dev
      before_script:
          - echo `which python`
      script:
          - echo `which python`
          - cd $TRAVIS_BUILD_DIR
          - make check -j4
    - env:
        # Parallel build and unit-test
        - CONFIGURE_COMMAND="./preconfigure.py --enable-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=$TRAVIS_BUILD_DIR --with-Boost-include=/usr/include/ --disable-tecio"
      addons:
          apt:
              packages:
                - build-essential
                - swig
                - libopenmpi-dev
                - libboost-test-dev
      before_script:
          - echo `which python`
      script:
          - echo `which python`
          - cd $TRAVIS_BUILD_DIR
          - make check -j4

env:
    global:
        CXXFLAGS="-O1 -Wall -Wextra -Wno-unused-parameter -Wno-empty-body -Wno-format-security"

before_install:
    - echo `which python`
    - echo $PATH
    - echo $PYTHONPATH
    - echo $VIRTUAL_ENV
    - pip install --upgrade pip
    - pip install setuptools
    - pip install numpy
    - pip install scipy
    - pip install wheel
    - export MPICC=`which mpicc`
    - export MPICXX=`which mpicxx`
    - pip3 install mpi4py

    # to avoid interference with MPI
    - test -n $CC  && unset CC
    - test -n $CXX && unset CXX

install:
    # Configure, make, and install SU2
    - echo `which python`
    - echo $TRAVIS_BUILD_DIR
    - echo $CONFIGURE_COMMAND
    - ./bootstrap
    - $CONFIGURE_COMMAND
    - make -j 4
    - make install

    # Add environmental variables according to the configure step
    - export SU2_RUN=$TRAVIS_BUILD_DIR/bin
    - export SU2_HOME=$TRAVIS_BUILD_DIR
    - export PATH=$PATH:$SU2_RUN
    - export PYTHONPATH=$PYTHONPATH:$SU2_RUN
