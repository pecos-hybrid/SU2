# Continous Integration setup for SU2.
# Tests on the develop branch in both serial and parallel.

dist: xenial
sudo: required

language: c++

cache:
    - ccache
    - pip
    - directories:
      - $HOME/.pyenv_cache

compiler:
    - gcc

notifications:
    email:
        recipients:
            - clarkp@utexas.edu

branches:
    only:
        - pecos-dev
        - meson-build-system

matrix:
  include:
    - env:
        # Serial build and regression test
        - MESON_BUILD_DIR="$TRAVIS_BUILD_DIR/build"
        - CONFIGURE_COMMAND="./meson.py $MESON_BUILD_DIR --prefix=$TRAVIS_BUILD_DIR -Denable-pywrapper=true -Dwith-mpi=disabled"
        - TEST_SCRIPT=serial_regression.py
      addons:
        apt:
          packages:
            - build-essential
            - swig
            - libopenmpi-dev
            - openmpi-bin
      before_script:
        - git clone -b v6.0.1 https://github.com/su2code/TestCases.git ./TestData
        - cp -R ./TestData/* ./TestCases/
        - cd TestCases
      script:
        - travis_wait 90 && python $TEST_SCRIPT
    - env:
        # Parallel build and regression test
        - MESON_BUILD_DIR="$TRAVIS_BUILD_DIR/build"
        - CONFIGURE_COMMAND="./meson.py $MESON_BUILD_DIR --prefix=$TRAVIS_BUILD_DIR -Denable-pywrapper=true"
        - TEST_SCRIPT=parallel_regression.py
      addons:
        apt:
          packages:
            - build-essential
            - swig
            - libopenmpi-dev
            - openmpi-bin
      before_script:
        - git clone -b v6.0.1 https://github.com/su2code/TestCases.git ./TestData
        - cp -R ./TestData/* ./TestCases/
        - cd TestCases
      script:
        - travis_wait 90 && python $TEST_SCRIPT
    - env:
        # Serial build and unit-test
        - MESON_BUILD_DIR="$TRAVIS_BUILD_DIR/build"
        - CONFIGURE_COMMAND="./meson.py $MESON_BUILD_DIR --prefix=$TRAVIS_BUILD_DIR -Denable-pywrapper=true -Dwith-mpi=disabled -Denable-boost-utf=true"
      addons:
        apt:
          packages:
            - build-essential
            - swig
            - libopenmpi-dev
            - openmpi-bin
            - libboost-test-dev
      before_script:
        - echo `which python`
      script:
        - ./ninja -C $MESON_BUILD_DIR test
    - env:
        # Parallel build and unit-test
        - MESON_BUILD_DIR="$TRAVIS_BUILD_DIR/build"
        - CONFIGURE_COMMAND="./meson.py $MESON_BUILD_DIR --prefix=$TRAVIS_BUILD_DIR -Denable-pywrapper=true -Denable-boost-utf=true"
      addons:
        apt:
          packages:
            - build-essential
            - swig
            - libopenmpi-dev
            - openmpi-bin
            - libboost-test-dev
      before_script:
        - echo `which python`
      script:
        - ./ninja -C $MESON_BUILD_DIR test

before_install:
    - echo `which python`
    - echo `which python3`
    - echo `python3 --version`
    - python3 -m venv $HOME/.pyenv
    - source $HOME/.pyenv/bin/activate
    - echo `which python`
    - pip install --upgrade pip
    - pip install setuptools
    - pip install numpy
    - pip install scipy
    - pip install wheel
    - export MPICC=`which mpicc`
    - export MPICXX=`which mpicxx`
    - pip install mpi4py

    # to avoid interference with MPI
    - test -n $CC  && unset CC
    - test -n $CXX && unset CXX

install:
    # build ninja
    - echo $PWD
    - echo $CONFIGURE_COMMAND
    - $CONFIGURE_COMMAND
    - ./meson.py $MESON_BUILD_DIR --reconfigure --optimization=2
    - ./meson.py $MESON_BUILD_DIR --reconfigure --warnlevel=2
    - ./ninja -C $MESON_BUILD_DIR install

    # Add environmental variables according to the configure step
    - export SU2_RUN=$TRAVIS_BUILD_DIR/bin
    - export SU2_HOME=$TRAVIS_BUILD_DIR
    - export PATH=$PATH:$SU2_RUN
    - export PYTHONPATH=$PYTHONPATH:$SU2_RUN
